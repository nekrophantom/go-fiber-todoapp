basePath: /api
definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  models.Todo:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      is_done:
        type: boolean
      task:
        type: string
      updatedAt:
        type: string
    type: object
host: localhost:3000
info:
  contact:
    email: reynold@nekro.dev
    name: Reynold
    url: https://github.com/nekrophantom
  description: Simple API using Go - Fiber
  title: Todo App Go - Fiber
  version: "1"
paths:
  /todos:
    get:
      description: Get list of all todos
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Todo'
            type: array
      summary: List Todos
    post:
      description: Create a Todo
      parameters:
      - description: Task Name
        in: body
        name: task
        required: true
        schema:
          example: |-
            {
            "task" : "example"
            }
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Todo'
        "400":
          description: Invalid Request
          schema:
            type: string
      summary: Store Todo
  /todos/{id}:
    delete:
      description: Delete an Todo By ID
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Success Delete Todo
          schema:
            type: string
        "404":
          description: Todo not found
          schema:
            type: string
      summary: Delete Todo
    get:
      description: Get todo by ID
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Todo'
        "404":
          description: Todo not found
          schema:
            type: string
      summary: Show an Todo
    put:
      description: Update an Todo By ID
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      - description: Task Name
        in: body
        name: task
        required: true
        schema:
          example: |-
            {
            "task" : "example"
            }
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Todo'
        "400":
          description: Invalid Request
          schema:
            type: string
        "404":
          description: Todo not found
          schema:
            type: string
      summary: Update Todo
swagger: "2.0"
